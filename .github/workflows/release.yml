name: Release
on:
  push:
    tags:
      - 'v[23]+.[0-9]+-[3-5].[05]-*'

jobs:
  prepare_env:
    name: Prepare variables
    runs-on: ubuntu-latest
    outputs:
      studio_version: ${{ steps.version_envs.outputs.STUDIO_VERSION }}
      tizen_version: ${{ steps.version_envs.outputs.TIZEN_VERSION }}
    steps:
      - name: Set env
        id: version_envs
        run: |
          echo ::set-output name=STUDIO_VERSION::$(echo ${GITHUB_REF##*/} | cut -c 2- | cut -d'-' -f1)
          echo ::set-output name=TIZEN_VERSION::$(echo ${GITHUB_REF##*/} | cut -c 2- | cut -d'-' -f2)

  docker_build:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: prepare_env
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build docker image for tags
        uses: docker/build-push-action@v1
        with:
          repository: retzero/tizen-studio
          tags: foo
          push: false
          build_args: STUDIO_VERSION=${{ needs.prepare_env.outputs.studio_version }},TIZEN_VERSION=${{ needs.prepare_env.outputs.tizen_version }}

      - name: Run image from registry
        run: |
          k=$(docker run --rm -i retzero/tizen-studio:foo tizen version)
          if [[ "${k%$'\r'}" != "Tizen CLI "* ]]; then exit 1; fi

      - name: Push docker image to docker hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: retzero/tizen-studio
          tags: latest
          build_args: STUDIO_VERSION=${{ needs.prepare_env.outputs.studio_version }},TIZEN_VERSION=${{ needs.prepare_env.outputs.tizen_version }}

#      - name: Store intermediate docker image
#        run: docker save -o workflow-foo.tar localhost:5000/temp/workflow:foo
#
#      - name: Store intermediate docker image
#        uses: actions/upload-artifact@v2
#        with:
#          name: docker_tarball
#          path: workflow-foo.tar

#  verify_image:
#    name: Verify docker image
#    runs-on: ubuntu-latest
#    needs: [prepare_env, docker_build]
#    steps:
#      - name: Retrieve intermediate docker tarball
#        uses: actions/download-artifact@v2
#        with:
#          name: docker_tarball
#
#      - name: Load docker image
#        run: docker load -i workflow-foo.tar
#
#      - name: Run image from registry
#        run: docker run --rm -i localhost:5000/temp/workflow:foo cat ./tizen_version.txt
